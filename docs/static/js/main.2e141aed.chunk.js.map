{"version":3,"sources":["reducers/createReducer.js","constants/taskListActionTypes.js","reducers/taskList.js","reducers/index.js","store.js","components/TaskAdder.js","actions/taskList.js","components/Task.js","components/TaskList.js","App.js","index.js"],"names":["createReducer","initialState","handlers","state","action","hasOwnProperty","type","ADD_TASK","REMOVE_TASK","VALIDATE_TASK","taskListReducer","payload","id","filter","i","validated","map","combineReducers","taskList","store","createStore","reducer","composeWithDevTools","TaskAdder","onSubmit","dispatch","useDispatch","useState","text","setText","handleChange","useCallback","value","target","handleSubmit","e","preventDefault","length","nanoid","created","Date","getTime","addTask","Form","InputGroup","Input","onChange","required","placeholder","InputGroupAddon","addonType","Button","title","color","Task","item","validate","validateTask","remove","removeTask","ListGroupItem","className","CustomInput","checked","size","onClick","TaskList","list","useSelector","sortedList","useMemo","_","orderBy","ListGroup","t","App","Container","class","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e141aed.chunk.js","sourcesContent":["export const createReducer = (initialState, handlers) => {\n    return function reducer(state = initialState, action){\n        if (handlers.hasOwnProperty(action.type))\n            return handlers[action.type](state, action);\n        return state;\n    }\n};\n\nexport default createReducer;\n","export const ADD_TASK = \"ADD_TASK\";\nexport const REMOVE_TASK = \"REMOVE_TASK\";\nexport const VALIDATE_TASK = \"VALIDATE_TASK\";\n","import {createReducer} from \"./createReducer\";\nimport {ADD_TASK, REMOVE_TASK, VALIDATE_TASK} from \"../constants/taskListActionTypes\";\n\nexport const taskListReducer = createReducer([], {\n  [ADD_TASK]: addTask,\n  [REMOVE_TASK]: removeTask,\n  [VALIDATE_TASK]: validateTask\n})\n\nfunction addTask(state, {payload}){\n  return [...state, payload];\n}\n\nfunction removeTask(state, {payload: {id}}){\n  return state.filter(i => i.id !== id);\n}\n\nfunction validateTask(state, {payload: {id, validated}}){\n  return state.map(i => {\n    if (i.id === id)\n      return {\n        ...i,\n        validated\n      };\n\n    return i;\n  })\n}\n","import {combineReducers} from \"redux\";\nimport {taskListReducer} from \"./taskList\";\n\nexport default combineReducers({\n  taskList: taskListReducer\n});\n","import {createStore} from \"redux\";\nimport reducer from \"./reducers\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools()\n);\n\nexport default store;\n","import React, {useCallback, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Form, Input, InputGroup, InputGroupAddon, Button} from \"reactstrap\";\nimport {addTask} from \"../actions/taskList\";\n\nexport const TaskAdder = ({onSubmit}) => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n\n  const handleChange = useCallback(({target: {value}}) => {\n    setText(value);\n  }, []);\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault();\n\n    if (!text?.length)\n      return;\n\n    dispatch(addTask({\n      text: text\n    }));\n\n    setText(\"\");\n  }, [text, onSubmit]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup>\n        <Input\n          onChange={handleChange}\n          required\n          value={text}\n          placeholder={\"Type task...\"}/>\n        <InputGroupAddon addonType=\"append\">\n          <Button\n            title=\"Add task\"\n            color=\"success\">\n            Add\n          </Button>\n        </InputGroupAddon>\n      </InputGroup>\n    </Form>\n  )\n}\n\nexport default TaskAdder;\n","import {nanoid} from \"nanoid\";\nimport {ADD_TASK, REMOVE_TASK, VALIDATE_TASK} from \"../constants/taskListActionTypes\";\n\nexport const addTask = ({text}) => ({\n  type: ADD_TASK,\n  payload: {\n    id: nanoid(),\n    text: text,\n    created: new Date().getTime(),\n    validated: false\n  }\n})\n\nexport const removeTask = ({id}) => ({\n  type: REMOVE_TASK,\n  payload: {\n    id: id\n  }\n});\n\nexport const validateTask = ({id, validated}) => ({\n  type: VALIDATE_TASK,\n  payload: {\n    id,\n    validated\n  }\n});\n","import React, {useCallback} from \"react\";\nimport {ListGroupItem, CustomInput, Button} from \"reactstrap\";\nimport {useDispatch} from \"react-redux\";\nimport {removeTask, validateTask} from \"../actions/taskList\";\n\nexport const Task = ({item: {id, text, validated}}) => {\n  const dispatch = useDispatch();\n\n  const validate = useCallback(() => {\n    dispatch(validateTask({\n      id,\n      validated: !validated\n    }));\n  }, [validated]);\n\n  const remove = useCallback(() => {\n    dispatch(removeTask({id}));\n  }, []);\n\n  return (\n    <ListGroupItem className=\"d-flex\">\n      <div>\n        <CustomInput\n          title=\"Validate task\"\n          id={id}\n          className=\"pt-1\"\n          type=\"checkbox\"\n          checked={validated}\n          onChange={validate}/>\n      </div>\n      <div className={`mx-1 flex-grow-1 ${validated ? 'text-muted text-decoration-line-through' : ''}`}>\n        {text}\n      </div>\n      <div>\n        <Button\n          title=\"Remove task\"\n          size=\"sm\"\n          color=\"danger\"\n          onClick={remove}>\n          X\n        </Button>\n      </div>\n    </ListGroupItem>\n  )\n}\n\nexport default Task;\n","import React, {useMemo} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Task} from \"./Task\";\nimport _ from \"lodash\"\nimport {ListGroup} from \"reactstrap\";\n\nexport const TaskList = () => {\n  const list = useSelector(({taskList}) => taskList);\n\n  const sortedList = useMemo(() => {\n    return _.orderBy(list, ['created'], ['desc']);\n  }, [list]);\n\n  return (\n    <ListGroup>\n      {sortedList.map(t => {\n        return (\n          <Task\n            key={t.id}\n            item={t}/>\n        )\n      })}\n    </ListGroup>\n  )\n}\n\nexport default TaskList;\n","import React from \"react\";\nimport {Container} from \"reactstrap\";\nimport {TaskAdder} from \"./components/TaskAdder\";\nimport {TaskList} from \"./components/TaskList\";\n\nfunction App() {\n  return (\n    <div>\n      <Container className=\"d-flex flex-column overflow-hidden pt-4 pb-4\">\n        <TaskAdder/>\n        <div class=\"flex-grow-1 overflow-auto mt-2\">\n          <TaskList/>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}